{"version":3,"sources":["App.js","defaultText.js","index.js"],"names":["App","useState","input","setInput","className","id","type","value","onChange","e","text","target","children","remarkPlugins","remarkGfm","remarkBreaks","rehypePlugins","rehypeRaw","components","code","node","inline","props","String","replace","language","PreTag","href","rootElement","document","getElementById","createRoot","render"],"mappings":"kRAQe,SAASA,IACtB,MAA0BC,mBCTJ,+pCDSyB,mBAAxCC,EAAK,KAAEC,EAAQ,KAMtB,OACE,qCACE,sBAAKC,UAAU,MAAK,UAClB,sBAAMA,UAAU,SAChB,sBAAKA,UAAU,eAAc,UAC3B,qBAAKA,UAAU,QAAO,SAAC,WACvB,0BACEC,GAAG,SACHC,KAAK,OACLC,MAAOL,EACPM,SAfU,SAACC,GACnB,IAAMC,EAAOD,EAAEE,OAAOJ,MACtBJ,EAASO,EACX,OAeM,sBAAKN,UAAU,gBAAe,UAC5B,qBAAKA,UAAU,QAAO,SAAC,cACvB,qBAAKC,GAAG,UAAS,SACf,cAAC,IAAa,CACZO,SAAUV,EACVW,cAAe,CAACC,IAAWC,KAC3BC,cAAe,CAACC,KAChBC,WAAY,CACVC,KAAI,YAAO,EAAJC,KAAgD,IAA1CC,EAAM,EAANA,OAAQjB,EAAS,EAATA,UAAWQ,EAAQ,EAARA,SAAaU,EAAK,iBAChD,OAAQD,EASN,8CAAMjB,UAAWA,GAAekB,GAAK,aAClCV,KATH,cAAC,IAAiB,aAChBA,SAAUW,OAAOX,GAAUY,QAAQ,MAAO,IAC1CC,SAAS,aAETC,OAAO,OACHJ,GAOV,aAMV,sBAAKlB,UAAU,SAAQ,UAAC,wBACA,IACtB,mBAAGuB,KAAK,yCAAwC,SAAC,mBAIzD,CExDA,IAAMC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAChC,EAAG,M","file":"static/js/main.a77bd91e.chunk.js","sourcesContent":["import ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkBreaks from \"remark-breaks\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { useState } from \"react\";\nimport { defaultText } from \"./defaultText\";\n\nexport default function App() {\n  const [input, setInput] = useState(defaultText);\n  const handleInput = (e) => {\n    const text = e.target.value;\n    setInput(text);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <span className=\"dots\"></span>\n        <div className=\"block-editor\">\n          <div className=\"title\">Editor</div>\n          <textarea\n            id=\"editor\"\n            type=\"text\"\n            value={input}\n            onChange={handleInput}\n          ></textarea>\n        </div>\n        <div className=\"block-preview\">\n          <div className=\"title\">Previewer</div>\n          <div id=\"preview\">\n            <ReactMarkdown\n              children={input}\n              remarkPlugins={[remarkGfm, remarkBreaks]}\n              rehypePlugins={[rehypeRaw]}\n              components={{\n                code({ node, inline, className, children, ...props }) {\n                  return !inline ? (\n                    <SyntaxHighlighter\n                      children={String(children).replace(/\\n$/, \"\")}\n                      language=\"javascript\"\n                      //language={match[1]}\n                      PreTag=\"div\"\n                      {...props}\n                    />\n                  ) : (\n                    <code className={className} {...props}>\n                      {children}\n                    </code>\n                  );\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"footer\">\n        Designed and coded by{\" \"}\n        <a href=\"https://linkedin.com/in/cheikhouwgueye\">cheikhouw</a>\n      </div>\n    </>\n  );\n}\n","export const defaultText = `\r\n# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n    - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n\r\n  `;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}